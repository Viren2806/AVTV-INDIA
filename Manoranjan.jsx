import React, { useState, useEffect } from 'react';
import '../css/Manoranjan.css';

const Manoranjan = () => {
  const [loading, setLoading] = useState(true);
  const [selectedCategory, setSelectedCategory] = useState('all');

  // Entertainment News Data in Gujarati
  const featuredNews = [
    {
      id: 1,
      title: "ркмрлЛрк▓рк┐рк╡рлВркбркирк╛ рк╕рлБрккрк░рк╕рлНркЯрк╛рк░ рк╢рк╛рк╣рк░рлБркЦ ркЦрк╛ркиркирлА ркирк╡рлА рклрк┐рк▓рлНрко 'ркЬрк╡рк╛рки' ркмрлЛркХрлНрк╕ ркУрклрк┐рк╕рлЗ ркдрлЛркбрлНркпрк╛ рк░рлЗркХрлЛрк░рлНркб",
      summary: "ркорлБркВркмркИ: рк╢рк╛рк╣рк░рлБркЦ ркЦрк╛ркиркирлА рк╕рк┐ркирлЗркорк╛ 'ркЬрк╡рк╛рки' рк░рк┐рк▓рлАркЭ ркеркдрк╛ркВ ркЬ ркмрлЛркХрлНрк╕ ркУрклрк┐рк╕рлЗ ркдрлЛркбрлНркпрк╛ ркдркорк╛рко рк░рлЗркХрлЛрк░рлНркб. рккрк╣рлЗрк▓рк╛ ркЬ ркжрк┐рк╡рк╕рлЗ 100 ркХрк░рлЛркбркирлЛ ркХрк▓рлЗркХрлНрк╢рки...",
      image: "https://images.unsplash.com/photo-1489599825065-bd9b1ad2b5d5?w=800&h=500&fit=crop",
      category: "ркмрлЛрк▓рк┐рк╡рлВркб",
      time: "1 ркХрк▓рк╛ркХ рккрк╣рлЗрк▓рк╛ркВ",
      readTime: "3 ркорк┐ркирк┐ркЯ",
      isFeatured: true
    },
    {
      id: 2,
      title: "ркЧрлБркЬрк░рк╛ркдрлА рклрк┐рк▓рлНрко 'ркЫрлЗрк▓рлНрк▓рлЛ ркжрк┐рк╡рк╕' ркХрк╛ркирлНрк╕ рклрк┐рк▓рлНрко рклрлЗрк╕рлНркЯрк┐рк╡рк▓ркорк╛ркВ рккрлНрк░рк╡рлЗрк╢, ркорлЛркЯрлА рк╕рк┐ркжрлНркзрк┐",
      summary: "ркЕркоркжрк╛рк╡рк╛ркж: ркЧрлБркЬрк░рк╛ркдрлА рк╕рк┐ркирлЗркорк╛ркирлЗ ркЖркВркдрк░рк░рк╛рк╖рлНркЯрлНрк░рлАркп рк╕рлНркдрк░рлЗ ркорк╛ркирлНркпркдрк╛ ркорк│рлА ркЫрлЗ. ркХрк╛ркирлНрк╕ рклрк┐рк▓рлНрко рклрлЗрк╕рлНркЯрк┐рк╡рк▓ркорк╛ркВ ркЧрлБркЬрк░рк╛ркдрлА рклрк┐рк▓рлНркоркирлЛ рккрлНрк░рк╡рлЗрк╢...",
      image: "https://images.unsplash.com/photo-1440404653325-ab127d49abc1?w=800&h=500&fit=crop",
      category: "ркЧрлБркЬрк░рк╛ркдрлА рк╕рк┐ркирлЗркорк╛",
      time: "2 ркХрк▓рк╛ркХ рккрк╣рлЗрк▓рк╛ркВ",
      readTime: "4 ркорк┐ркирк┐ркЯ",
      isFeatured: true
    }
  ];

  const entertainmentNews = [
    {
      id: 3,
      title: "рккрлНрк░рк┐ркпркВркХрк╛ ркЪрлЛрккрлНрк░рк╛ркирлА ркирк╡рлА рк╣рлЛрк▓рк┐рк╡рлВркб рклрк┐рк▓рлНркоркирлБркВ ркЯрлНрк░рлЗрк▓рк░ рк░рк┐рк▓рлАркЭ, рклрлЗркирлНрк╕ркорк╛ркВ ркЙркдрлНрк╕рк╛рк╣",
      summary: "ркорлБркВркмркИ: ркмрлЛрк▓рк┐рк╡рлВркбркерлА рк╣рлЛрк▓рк┐рк╡рлВркб рк╕рлБркзрлАркирлА рк╕рклрк░ ркХрк░ркирк╛рк░ рккрлНрк░рк┐ркпркВркХрк╛ ркЪрлЛрккрлНрк░рк╛ркирлА ркирк╡рлА рклрк┐рк▓рлНрко...",
      image: "https://images.unsplash.com/photo-1512070750671-e7e8eac67d09?w=400&h=250&fit=crop",
      category: "рк╣рлЛрк▓рк┐рк╡рлВркб",
      time: "3 ркХрк▓рк╛ркХ рккрк╣рлЗрк▓рк╛ркВ",
      readTime: "2 ркорк┐ркирк┐ркЯ"
    },
    {
      id: 4,
      title: "рк╕рк▓ркорк╛рки ркЦрк╛ркиркирлА 'ркЯрк╛ркЗркЧрк░ 3' рклрк┐рк▓рлНркоркирлА рк╢рлВркЯрк┐ркВркЧ рккрлВрк░рлНркг, ркжрк┐рк╡рк╛рк│рлАркорк╛ркВ рк░рк┐рк▓рлАркЭ",
      summary: "ркорлБркВркмркИ: ркмрлЛрк▓рк┐рк╡рлВркбркирк╛ ркнрк╛ркИркЬрк╛рки рк╕рк▓ркорк╛рки ркЦрк╛ркиркирлА ркЕрккрлЗркХрлНрк╖рк┐ркд рклрк┐рк▓рлНрко ркЯрк╛ркЗркЧрк░ 3 ркдрлИркпрк╛рк░...",
      image: "https://images.unsplash.com/photo-1594909122845-11baa439b7bf?w=400&h=250&fit=crop",
      category: "ркмрлЛрк▓рк┐рк╡рлВркб",
      time: "4 ркХрк▓рк╛ркХ рккрк╣рлЗрк▓рк╛ркВ",
      readTime: "3 ркорк┐ркирк┐ркЯ"
    },
    {
      id: 5,
      title: "ркЧрлБркЬрк░рк╛ркдрлА ркирк╛ркЯрлНркп ркЬркЧркдркорк╛ркВ ркирк╡рлА рккрлНрк░ркдрк┐ркнрк╛, ркЕркоркжрк╛рк╡рк╛ркжркорк╛ркВ рк╢рлЛ рк╣рк╛ркЙрк╕ рклрлБрк▓",
      summary: "ркЕркоркжрк╛рк╡рк╛ркж: ркЧрлБркЬрк░рк╛ркдрлА ркерк┐ркпрлЗркЯрк░ркорк╛ркВ ркпрлБрк╡рк╛ ркХрк▓рк╛ркХрк╛рк░рлЛркирлЛ ркЙркжркп ркеркИ рк░рк╣рлНркпрлЛ ркЫрлЗ...",
      image: "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=250&fit=crop",
      category: "ркерк┐ркпрлЗркЯрк░",
      time: "5 ркХрк▓рк╛ркХ рккрк╣рлЗрк▓рк╛ркВ",
      readTime: "4 ркорк┐ркирк┐ркЯ"
    },
    {
      id: 6,
      title: "OTT рккрлНрк▓рлЗркЯрклрлЛрк░рлНрко рккрк░ ркЧрлБркЬрк░рк╛ркдрлА ркХркирлНркЯрлЗркирлНркЯркирлА рк╡ркзркдрлА ркорк╛ркВркЧ, ркирк╡рк╛ рк╢рлЛ ркЖрк╡рк╢рлЗ",
      summary: "ркЕркоркжрк╛рк╡рк╛ркж: ркбрк┐ркЬрк┐ркЯрк▓ рккрлНрк▓рлЗркЯрклрлЛрк░рлНрко рккрк░ ркЧрлБркЬрк░рк╛ркдрлА ркнрк╛рк╖рк╛ркирк╛ ркХркирлНркЯрлЗркирлНркЯркирлА ркорк╛ркВркЧ рк╡ркзрлА рк░рк╣рлА ркЫрлЗ...",
      image: "https://images.unsplash.com/photo-1522869635100-9f4c5e86aa37?w=400&h=250&fit=crop",
      category: "OTT",
      time: "6 ркХрк▓рк╛ркХ рккрк╣рлЗрк▓рк╛ркВ",
      readTime: "3 ркорк┐ркирк┐ркЯ"
    },
    {
      id: 7,
      title: "рк░ркгрк╡рлАрк░ рк╕рк┐ркВрк╣ ркЕркирлЗ ркжрлАрккрк┐ркХрк╛ рккрк╛ркжрлБркХрлЛркгркирлА ркирк╡рлА рклрк┐рк▓рлНркоркирлА ркЬрк╛рк╣рлЗрк░рк╛ркд",
      summary: "ркорлБркВркмркИ: ркмрлЛрк▓рк┐рк╡рлВркбркирлА рккрк╛рк╡рк░ ркХрккрк▓ рк░ркгрк╡рлАрк░ ркЕркирлЗ ркжрлАрккрк┐ркХрк╛ рклрк░рлА ркПркХрк╕рк╛ркерлЗ рклрк┐рк▓рлНркоркорк╛ркВ...",
      image: "https://images.unsplash.com/photo-1485846234645-a62644f84728?w=400&h=250&fit=crop",
      category: "ркмрлЛрк▓рк┐рк╡рлВркб",
      time: "8 ркХрк▓рк╛ркХ рккрк╣рлЗрк▓рк╛ркВ",
      readTime: "5 ркорк┐ркирк┐ркЯ"
    },
    {
      id: 8,
      title: "рк╡рлЗркм рк╕рк┐рк░рлАркЭ 'рк╕рлНркХрлЗрко 1992'ркирк╛ ркирк┐рк░рлНркорк╛ркдрк╛ркирлА ркирк╡рлА рккрлНрк░рлЛркЬрлЗркХрлНркЯ рк╢рк░рлВ",
      summary: "ркорлБркВркмркИ: рккрлНрк░ркдрк┐ркХ ркЧрк╛ркВркзрлАркирлЗ рккрлНрк░рк╕рк┐ркжрлНркз ркмркирк╛рк╡ркирк╛рк░ 'рк╕рлНркХрлЗрко 1992'ркирк╛ ркирк┐рк░рлНркорк╛ркдрк╛ рк╣рк░рлНрк╖ркж ркорк╣рлЗркдрк╛ркирлА ркирк╡рлА рк╡рлЗркм рк╕рк┐рк░рлАркЭ...",
      image: "https://images.unsplash.com/photo-1489599825065-bd9b1ad2b5d5?w=400&h=250&fit=crop",
      category: "рк╡рлЗркм рк╕рк┐рк░рлАркЭ",
      time: "10 ркХрк▓рк╛ркХ рккрк╣рлЗрк▓рк╛ркВ",
      readTime: "4 ркорк┐ркирк┐ркЯ"
    }
  ];

  const boxOfficeData = [
    { name: "ркЬрк╡рк╛рки", collection: "тВ╣350 ркХрк░рлЛркб", change: "+15%", weeks: "2 ркЕркарк╡рк╛ркбрк┐ркпрк╛" },
    { name: "ркЧрлМрк░рлА", collection: "тВ╣45 ркХрк░рлЛркб", change: "+8%", weeks: "1 ркЕркарк╡рк╛ркбрк┐ркпрлБркВ" },
    { name: "ркз ркХрлЗрк░рлЗрк▓ ркХрк┐рк╕", collection: "тВ╣25 ркХрк░рлЛркб", change: "-5%", weeks: "3 ркЕркарк╡рк╛ркбрк┐ркпрк╛" },
    { name: "ркорк┐рк╢рки ркоркВркЧрк▓", collection: "тВ╣80 ркХрк░рлЛркб", change: "+12%", weeks: "4 ркЕркарк╡рк╛ркбрк┐ркпрк╛" }
  ];

  const categories = [
    { id: 'all', name: 'ркмркзрк╛ рк╕ркорк╛ркЪрк╛рк░', count: 134 },
    { id: 'bollywood', name: 'ркмрлЛрк▓рк┐рк╡рлВркб', count: 56 },
    { id: 'gujarati', name: 'ркЧрлБркЬрк░рк╛ркдрлА рк╕рк┐ркирлЗркорк╛', count: 23 },
    { id: 'hollywood', name: 'рк╣рлЛрк▓рк┐рк╡рлВркб', count: 18 },
    { id: 'tv', name: 'ркЯрлАрк╡рлА рк╢рлЛ', count: 15 },
    { id: 'music', name: 'рк╕ркВркЧрлАркд', count: 22 }
  ];

  const trending = [
    "рк╢рк╛рк╣рк░рлБркЦ ркЦрк╛ркиркирлА ркЬрк╡рк╛рки рклрк┐рк▓рлНрко",
    "ркХрк╛ркирлНрк╕ркорк╛ркВ ркЧрлБркЬрк░рк╛ркдрлА рклрк┐рк▓рлНрко", 
    "рккрлНрк░рк┐ркпркВркХрк╛ркирлА рк╣рлЛрк▓рк┐рк╡рлВркб рклрк┐рк▓рлНрко",
    "OTT рккрк░ ркЧрлБркЬрк░рк╛ркдрлА ркХркирлНркЯрлЗркирлНркЯ",
    "ркирк╡рлЛ рк╡рлЗркм рк╕рк┐рк░рлАркЭ рк▓рлЛркирлНркЪ"
  ];

  const upcomingReleases = [
    { title: "ркЖркжрк┐рккрлБрк░рлБрк╖", date: "16 ркЬрлВрки", genre: "ркПркХрлНрк╢рки/ркбрлНрк░рк╛ркорк╛" },
    { title: "рк░рлЛркХрлА ркЕркирлЗ рк░рк╛ркгрлА", date: "28 ркЬрлБрк▓рк╛ркИ", genre: "рк░рлЛркорк╛ркирлНрк╕" },
    { title: "ркЧрлМрк░рлА 2", date: "15 ркУркЧрк╕рлНркЯ", genre: "рк╣рлЛрк░рк░" },
    { title: "ркорк┐рк╢рки: ркЗркорлНрккрлЛрк╕рк┐ркмрк▓ 8", date: "12 рк╕рккрлНркЯрлЗркорлНркмрк░", genre: "ркПркХрлНрк╢рки" }
  ];

  useEffect(() => {
    const timer = setTimeout(() => setLoading(false), 1200);
    return () => clearTimeout(timer);
  }, []);

  const handleCategoryFilter = (categoryId) => {
    setSelectedCategory(categoryId);
  };

  const handleNewsClick = (newsId) => {
    console.log('News clicked:', newsId);
    // Add navigation logic here
  };

  const handleShareNews = (newsId, e) => {
    e.stopPropagation();
    console.log('Share news:', newsId);
    // Add share functionality here
  };

  const handleBookmarkNews = (newsId, e) => {
    e.stopPropagation();
    console.log('Bookmark news:', newsId);
    // Add bookmark functionality here
  };

  const handleLoadMore = () => {
    console.log('Load more news');
    // Add load more functionality here
  };

  const handleNewsletterSubscribe = (email) => {
    console.log('Newsletter subscription:', email);
    // Add newsletter subscription logic here
  };

  if (loading) {
    return (
      <div className="manoranjan-loading">
        <div className="loading-spinner"></div>
        <h2>ркоркирлЛрк░ркВркЬрки рк╕ркорк╛ркЪрк╛рк░ рк▓рлЛркб ркеркИ рк░рк╣рлНркпрк╛ ркЫрлЗ...</h2>
      </div>
    );
  }

  return (
    <div className="manoranjan-page" style={{ marginTop:"120px"}}>
      {/* Header Section */}
      <section className="manoranjan-header">
        <div className="container">
          <div className="header-content">
            <h1 className="page-title">
              <span className="title-icon">ЁЯОм</span>
              ркоркирлЛрк░ркВркЬрки рк╕ркорк╛ркЪрк╛рк░
            </h1>
            <p className="page-subtitle">ркмрлЛрк▓рк┐рк╡рлВркб, рк╣рлЛрк▓рк┐рк╡рлВркб ркЕркирлЗ ркЧрлБркЬрк░рк╛ркдрлА рк╕рк┐ркирлЗркорк╛ркирк╛ ркдрк╛ркЬрк╛ рк╕ркорк╛ркЪрк╛рк░</p>
          </div>
        </div>
      </section>

      {/* Box Office Ticker */}
      <section className="box-office-ticker">
        <div className="ticker-container">
          <div className="ticker-label">ЁЯОн ркмрлЛркХрлНрк╕ ркУрклрк┐рк╕</div>
          <div className="ticker-content">
            {boxOfficeData.map((movie, index) => (
              <div key={index} className="movie-item">
                <span className="movie-name">{movie.name}</span>
                <span className="movie-collection">{movie.collection}</span>
                <span className={`movie-change ${movie.change.startsWith('+') ? 'positive' : 'negative'}`}>
                  {movie.change}
                </span>
                <span className="movie-weeks">{movie.weeks}</span>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Featured News */}
      <section className="featured-section">
        <div className="container">
          <h2 className="section-title">ркорлБркЦрлНркп рк╕ркорк╛ркЪрк╛рк░</h2>
          <div className="featured-grid">
            {featuredNews.map((news) => (
              <article 
                key={news.id} 
                className="featured-card"
                onClick={() => handleNewsClick(news.id)}
                role="button"
                tabIndex={0}
                onKeyDown={(e) => {
                  if (e.key === 'Enter' || e.key === ' ') {
                    handleNewsClick(news.id);
                  }
                }}
              >
                <div className="featured-image">
                  <img src={news.image} alt={news.title} loading="lazy" />
                  <div className="image-overlay"></div>
                  <span className="featured-badge">ркорлБркЦрлНркп рк╕ркорк╛ркЪрк╛рк░</span>
                </div>
                <div className="featured-content">
                  <div className="news-meta">
                    <span className="category">{news.category}</span>
                    <span className="time">ЁЯХТ {news.time}</span>
                    <span className="read-time">ЁЯУЦ {news.readTime}</span>
                  </div>
                  <h3 className="featured-title">{news.title}</h3>
                  <p className="featured-summary">{news.summary}</p>
                  <button className="read-more-btn">
                    рк╡рк┐ркЧркдрк╡рк╛рк░ рк╡рк╛ркВркЪрлЛ
                    <span className="btn-arrow">тЖТ</span>
                  </button>
                </div>
              </article>
            ))}
          </div>
        </div>
      </section>

      {/* Main Content */}
      <section className="main-content">
        <div className="container">
          <div className="content-wrapper">
            <div className="news-content">
              {/* Category Filter */}
              <div className="category-filter">
                <h3>рк╡рк┐ркнрк╛ркЧ рккрк╕ркВркж ркХрк░рлЛ</h3>
                <div className="filter-buttons">
                  {categories.map((cat) => (
                    <button
                      key={cat.id}
                      className={`filter-btn ${selectedCategory === cat.id ? 'active' : ''}`}
                      onClick={() => handleCategoryFilter(cat.id)}
                      aria-pressed={selectedCategory === cat.id}
                    >
                      {cat.name}
                      <span className="count">({cat.count})</span>
                    </button>
                  ))}
                </div>
              </div>

              {/* News Grid */}
              <div className="news-grid">
                {entertainmentNews.map((news) => (
                  <article 
                    key={news.id} 
                    className="news-card"
                    onClick={() => handleNewsClick(news.id)}
                    role="button"
                    tabIndex={0}
                    onKeyDown={(e) => {
                      if (e.key === 'Enter' || e.key === ' ') {
                        handleNewsClick(news.id);
                      }
                    }}
                  >
                    <div className="news-image">
                      <img src={news.image} alt={news.title} loading="lazy" />
                      <span className="category-tag">{news.category}</span>
                    </div>
                    <div className="news-content-area">
                      <h4 className="news-title">{news.title}</h4>
                      <p className="news-summary">{news.summary}</p>
                      <div className="news-footer">
                        <div className="news-meta">
                          <span className="time">ЁЯХТ {news.time}</span>
                          <span className="read-time">ЁЯУЦ {news.readTime}</span>
                        </div>
                        <div className="news-actions">
                          <button 
                            className="share-btn"
                            onClick={(e) => handleShareNews(news.id, e)}
                            aria-label={`рк╢рлЗрк░ ркХрк░рлЛ: ${news.title}`}
                          >
                            рк╢рлЗрк░
                          </button>
                          <button 
                            className="bookmark-btn"
                            onClick={(e) => handleBookmarkNews(news.id, e)}
                            aria-label={`рк╕рлЗрк╡ ркХрк░рлЛ: ${news.title}`}
                          >
                            рк╕рлЗрк╡
                          </button>
                        </div>
                      </div>
                    </div>
                  </article>
                ))}
              </div>

              {/* Load More Button */}
              <div className="load-more-section">
                <button className="load-more-btn" onClick={handleLoadMore}>
                  рк╡ркзрлБ рк╕ркорк╛ркЪрк╛рк░ рк▓рлЛркб ркХрк░рлЛ
                  <span className="loading-dots">...</span>
                </button>
              </div>
            </div>

            {/* Sidebar */}
            <aside className="manoranjan-sidebar">
              {/* Trending Section */}
              <div className="sidebar-section trending-section">
                <h3 className="sidebar-title">
                  <span className="title-icon">ЁЯФе</span>
                  ркЯрлНрк░рлЗркирлНркбрк┐ркВркЧ
                </h3>
                <div className="trending-list">
                  {trending.map((trend, index) => (
                    <div 
                      key={index} 
                      className="trending-item"
                      role="button"
                      tabIndex={0}
                      onClick={() => console.log('Trending clicked:', trend)}
                      onKeyDown={(e) => {
                        if (e.key === 'Enter' || e.key === ' ') {
                          console.log('Trending clicked:', trend);
                        }
                      }}
                    >
                      <span className="trend-number">{index + 1}</span>
                      <p className="trend-text">{trend}</p>
                    </div>
                  ))}
                </div>
              </div>

              {/* Upcoming Releases */}
              <div className="sidebar-section upcoming-releases">
                <h3 className="sidebar-title">
                  <span className="title-icon">ЁЯОе</span>
                  ркЖрк╡ркирк╛рк░рлА рклрк┐рк▓рлНркорлЛ
                </h3>
                <div className="releases-list">
                  {upcomingReleases.map((movie, index) => (
                    <div 
                      key={index} 
                      className="release-item"
                      role="button"
                      tabIndex={0}
                      onClick={() => console.log('Movie clicked:', movie.title)}
                      onKeyDown={(e) => {
                        if (e.key === 'Enter' || e.key === ' ') {
                          console.log('Movie clicked:', movie.title);
                        }
                      }}
                    >
                      <div className="release-info">
                        <h4 className="movie-title">{movie.title}</h4>
                        <span className="movie-genre">{movie.genre}</span>
                      </div>
                      <div className="release-date">{movie.date}</div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Box Office Summary */}
              <div className="sidebar-section box-office-summary">
                <h3 className="sidebar-title">
                  <span className="title-icon">ЁЯТ░</span>
                  ркмрлЛркХрлНрк╕ ркУрклрк┐рк╕
                </h3>
                <div className="box-office-cards">
                  {boxOfficeData.map((movie, index) => (
                    <div key={index} className="box-office-card">
                      <div className="movie-info">
                        <span className="movie-name">{movie.name}</span>
                        <span className="movie-weeks">{movie.weeks}</span>
                      </div>
                      <div className="collection-info">
                        <span className="collection">{movie.collection}</span>
                        <span className={`change ${movie.change.startsWith('+') ? 'positive' : 'negative'}`}>
                          {movie.change}
                        </span>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Quick Links */}
              <div className="sidebar-section quick-links">
                <h3 className="sidebar-title">
                  <span className="title-icon">ЁЯФЧ</span>
                  ркЙрккркпрлЛркЧрлА рк▓рк┐ркВркХрлНрк╕
                </h3>
                <div className="links-list">
                  <a href="https://www.imdb.com/" className="quick-link" target="_blank" rel="noopener noreferrer">IMDB рк░рлЗркЯрк┐ркВркЧ</a>
                  <a href="#" className="quick-link" onClick={(e) => e.preventDefault()}>ркмрлЛркХрлНрк╕ ркУрклрк┐рк╕ рк▓рк╛ркЗрк╡</a>
                  <a href="https://www.imdb.com/trailers/" className="quick-link" target="_blank" rel="noopener noreferrer">рклрк┐рк▓рлНрко ркЯрлНрк░рлЗрк▓рк░</a>
                  <a href="#" className="quick-link" onClick={(e) => e.preventDefault()}>рк╕рлЗрк▓рк┐ркмрлНрк░рк┐ркЯрлА ркЗркирлНркЯрк░рк╡рлНркпрлБ</a>
                  <a href="#" className="quick-link" onClick={(e) => e.preventDefault()}>ркорлВрк╡рлА рк░рк┐рк╡рлНркпрлБ</a>
                </div>
              </div>

              {/* Advertisement Space */}
              <div className="sidebar-section ad-space">
                <div className="ad-placeholder">
                  <p>ркЬрк╛рк╣рлЗрк░рк╛ркд рк╕рлНркерк│</p>
                  <span>300 x 250</span>
                </div>
              </div>
            </aside>
          </div>
        </div>
      </section>

      {/* Newsletter Section */}
      <section className="newsletter-section">
        <div className="container">
          <div className="newsletter-content">
            <div className="newsletter-text">
              <h3>ркжрк░рк░рлЛркЬ ркоркирлЛрк░ркВркЬрки рк╕ркорк╛ркЪрк╛рк░ ркорлЗрк│рк╡рлЛ</h3>
              <p>ркдркорк╛рк░рк╛ ркЗркорлЗркЗрк▓ рккрк░ ркмрлЛрк▓рк┐рк╡рлВркб, рк╣рлЛрк▓рк┐рк╡рлВркб ркЕркирлЗ ркЧрлБркЬрк░рк╛ркдрлА рк╕рк┐ркирлЗркорк╛ркирк╛ ркдрк╛ркЬрк╛ рк╕ркорк╛ркЪрк╛рк░ ркорлЗрк│рк╡рлЛ</p>
            </div>
            <div className="newsletter-form">
              <input 
                type="email" 
                placeholder="ркдркорк╛рк░рлЛ ркЗркорлЗркЗрк▓ ркжрк╛ркЦрк▓ ркХрк░рлЛ" 
                aria-label="ркЗркорлЗркЗрк▓ ркПркбрлНрк░рлЗрк╕"
                onKeyDown={(e) => {
                  if (e.key === 'Enter') {
                    const email = e.target.value;
                    console.log('Newsletter subscription:', email);
                  }
                }}
              />
              <button 
                className="subscribe-btn"
                onClick={(e) => {
                  const email = e.target.parentElement.querySelector('input').value;
                  console.log('Newsletter subscription:', email);
                }}
              >
                рк╕ркмрк╕рлНркХрлНрк░рк╛ркЗркм ркХрк░рлЛ
              </button>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
};

export default Manoranjan;